{"name":"Warp","tagline":"OpenFlow Driver in Java","body":"#Quick Start Guide: Warp OpenFlow controller\r\n====================================\r\n\r\nThis OF Controller implementation is based on [Apache AVRO] (https://avro.apache.org/) library\r\n\r\n>1. Setup a WARP_ROOT environment variable where the project is placed, e.g.:\r\n```bash\r\n $ cd <warp_root_dir>\r\n $ export WARP_ROOT=`pwd`\r\n```\r\n\r\n>2. Build Avro library (One time Step - and when ever Avro library is modified):\r\n ```bash\r\n $ cd $WARP_ROOT/src/main/java/avro-trunk/lang/java/avro\r\n $ mvn install -DskipTests\r\n ```\r\n\r\n>3. Build warp.jar and JavaDoc API:\r\n ```bash\r\n $ cd $WARP_ROOT\r\n $ ant\r\n $ ant javadoc\r\n ```\r\n\r\n>4. Running the OpenFlow Switch and Warp Controller<br/>\r\n   Warp Controller [User's Guide] (https://github.com/shivarammysore/warp/wiki/Warp-User's-Guide)<br/>\r\n   Warp Controller [testing against OpenFlow 1.3 LINC Switch] (https://github.com/shivarammysore/warp/wiki/Warp-testing-against-OpenFlow-1.3-LINC-Switch)\r\n\r\n   For Developers, interested in [using the API] (https://github.com/shivarammysore/warp/wiki/Warp-Java-API-Cookbook)\r\n\r\n>5. Additional Documentation (docs directory):\r\n     (1) Using Apache Avro to implement an OpenFlow protocol library: UsingApacheAVROtoimplementOFProtocol.pdf\r\n     (2) Details of Architecture and Implementation: Architecture_and_Implementation_Details.txt\r\n     (3) 'ant javadoc' target builds API documentation and is placed in docs/api directory\r\n","google":"UA-45291622-1","note":"Don't delete this file! It's used internally to help with page regeneration."}